name: CI/CD Pipeline

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_FRONTEND: ghcr.io/dharshansr/calculator-frontend
      IMAGE_BACKEND: ghcr.io/dharshansr/calculator-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tags
        id: vars
        run: |
          echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

          # For branch pushes, use branch name as tag (sanitize / -> -)
          if [[ "${GITHUB_REF}" == refs/heads/* ]]; then
            SAFE_BRANCH=${BRANCH//\//-}
            echo "IMAGE_TAG=$SAFE_BRANCH" >> $GITHUB_ENV
          fi

          # For tag pushes, use the tag as image tag
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV
          fi

          # Fallback tag if none matched
          if [ -z "$IMAGE_TAG" ]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.IMAGE_FRONTEND }}:${{ env.IMAGE_TAG }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.IMAGE_BACKEND }}:latest
            ${{ env.IMAGE_BACKEND }}:${{ env.IMAGE_TAG }}
